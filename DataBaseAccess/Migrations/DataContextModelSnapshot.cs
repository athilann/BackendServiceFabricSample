// <auto-generated />
using DataBaseAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataBaseAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBaseAccess.Entity.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Date")
                        .IsRequired();

                    b.Property<string>("PayerBank")
                        .IsRequired();

                    b.Property<string>("PayerBankAccount")
                        .IsRequired();

                    b.Property<string>("PayerBankAgency")
                        .IsRequired();

                    b.Property<string>("PayerName")
                        .IsRequired();

                    b.Property<string>("RecipientBank")
                        .IsRequired();

                    b.Property<string>("RecipientBankAccount")
                        .IsRequired();

                    b.Property<string>("RecipientBankAgency")
                        .IsRequired();

                    b.Property<string>("RecipientName")
                        .IsRequired();

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<string>("TransactionType")
                        .IsRequired();

                    b.Property<int>("UserID");

                    b.Property<decimal>("Value");

                    b.Property<int>("Active");

                    b.HasKey("TransactionID");

                    b.HasIndex("UserID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DataBaseAccess.Entity.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataBaseAccess.Entity.Transaction", b =>
                {
                    b.HasOne("DataBaseAccess.Entity.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
